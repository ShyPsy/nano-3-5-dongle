#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>


#define BASE   0
#define GAME   1
#define FN     2
#define NUM    3 
#define MOUSE  4
#define NAV    5
#define FUNC   6
#define SYMBOL 7
#define SCRLL  8
#define SCRLLL 9

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24  
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define THUMBS 30 31 32 33 34 35  

&sk {
  release-after-ms = <600>;
  quick-release;
};

&sl {
  ignore-modifiers;
};

&mt {
  flavor = "tap-preferred";
};

&lt {
  flavor = "balanced";
  tapping-term-ms = <200>;
  quick-tap-ms = <175>;
};

&caps_word {
  /delete-property/ ignore-modifiers;
};

/ {
  behaviors {
    hml: hml {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <2000>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <250>;
      hold-trigger-key-positions = <KEYS_R THUMBS>;
      hold-trigger-on-release;
      bindings =
        <&kp>,
        <&kp>;
    };

    hmr: hmr {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <2000>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <250>;
      hold-trigger-key-positions = <KEYS_L THUMBS>;
      hold-trigger-on-release;
      bindings =
        <&kp>,
        <&kp>;
    };
    hml_s: hml_s {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <2000>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <0>;
      hold-trigger-key-positions = <KEYS_R THUMBS>;
      hold-trigger-on-release;
      bindings =
        <&kp>,
        <&kp>;
    };

    hmr_s: hmr_s {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <2000>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <0>;
      hold-trigger-key-positions = <KEYS_L THUMBS>;
      hold-trigger-on-release;
      bindings =
        <&kp>,
        <&kp>;
    };

    smart_shift: smart_shift {    
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&sk LSHIFT>, <&caps_word>;
      mods = <(MOD_LSFT)>;
    };
  };

  combos {
    compatible = "zmk,combos";
    timeout-ms = <20>;
    require-prior-idle-ms = <250>;

  
    combo_reset_central {
      key-positions = <32 33>;
      bindings = <&bootloader>;
      require-prior-idle-ms = <2000>;
    };
    combo_esc {
      key-positions = <1 2>;
      bindings = <&kp ESCAPE>;
    };
    combo_tab {
      key-positions = <2 3>;
      bindings = <&kp TAB>;
    };
    combo_cdel {
      key-positions = <11 12>;
      bindings = <&kp LC(BACKSPACE)>;
    };
    combo_unlock {
      key-positions = <0 4>;
      bindings = <&studio_unlock>;
    };
  };
  chosen {
    zmk,physical-layout = &charybdis_5col_layout;
  };

  keymap {
    compatible = "zmk,keymap";

    
  };
};












